/* eslint-disable @next/next/no-img-element */
/* eslint-disable @typescript-eslint/no-unsafe-call */
/* eslint-disable @typescript-eslint/no-unsafe-member-access */
/* eslint-disable @typescript-eslint/no-unsafe-assignment */
import { type NextPage } from "next";
import Head from "next/head";
import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";

import { api, type RouterOutputs } from "~/utils/api";

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  console.log(user);

  return (
    <div className="flex flex-grow gap-3">
      <img
        src={user.profileImageUrl}
        alt="Profile Image"
        className="h-10 w-10 rounded-full"
      />
      <input
        placeholder="Type something"
        className="w-full bg-transparent outline-none"
      />
    </div>
  );
};

import formatRelative from "date-fns/formatRelative";

type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  const relativeTime = formatRelative(post.createdAt, new Date());
  return (
    <div
      className="flex flex-row gap-6 border-b border-slate-400 p-4"
      key={post.id}
    >
      <img
        src={author.profilePicture}
        className="h-10 w-10 rounded-full"
        alt="Profile image"
      />
      <div className="flex flex-col gap-y-2">
        <div className="flex flex-row items-center gap-1 text-slate-300">
          <span className="">{author.username}</span>
          <span className="text-sm font-thin">â€¢ {relativeTime}</span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const user = useUser();
  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) return <div>Loading...</div>;
  if (!data) return <div>Something went wrong!</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* Container */}
      <main className="flex h-screen justify-center">
        {/* Center column */}
        <div className="h-full w-full border-x border-slate-400 md:max-w-2xl">
          {/* Header */}
          <div className="flex flex-row items-center justify-between gap-12 border-b border-slate-400 p-4">
            {!!user.isSignedIn && <CreatePostWizard />}

            {!user.isSignedIn && (
              <div className="btn flex justify-end">
                <SignInButton />
              </div>
            )}

            {!!user.isSignedIn && (
              <div className="btn flex justify-end">
                <SignOutButton />
              </div>
            )}
          </div>

          {/* Posts */}
          <div className="flex flex-col">
            {data?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
